name: Deploy

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build project
      run: npm run build
    
    - name: Deploy Discord commands
      env:
        DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
        DISCORD_CLIENT_ID: ${{ secrets.DISCORD_CLIENT_ID }}
        DISCORD_GUILD_ID: ${{ secrets.DISCORD_GUILD_ID }}
      run: npm run deploy-commands
    
    - name: Create deployment artifact
      run: |
        tar -czf discord-bot-${{ github.sha }}.tar.gz \
          dist/ \
          package.json \
          package-lock.json \
          prisma/ \
          --exclude=prisma/dev.db
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: discord-bot-${{ github.sha }}
        path: discord-bot-${{ github.sha }}.tar.gz
        retention-days: 30

  release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: deploy
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: discord-bot-${{ github.sha }}
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: discord-bot-${{ github.sha }}.tar.gz
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
